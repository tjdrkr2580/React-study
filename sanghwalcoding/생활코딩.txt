사용자 정의 태그 - component
사용자 정의 태그를 제작할 때에는 무조건 대문자를 사용해야 한다.
더 적은 복잡도를 가지고 , 생산성을 획기적으로 끌어올릴 수 있음.

-

props를 사용해서 props.title을 사용해서 제목을 바꿀 수 있음.
[props가 약간 JS에서의 함수의 파라미터로 event를 넣었던 것처럼 props를 넣는 것 같다.]
function Nav(props) {
    const lis = []
        for(let i = 0 ; i < props.topics.length;i++){
          let t = props.topics[i]; 
          lis.push(<li key={t.id}><a href={'/read/'+t.id}>t.title</a></li>);
        }
    return (
    <nav>
        <ol>
          { lis }
        </ol>
    </nav>)

    ... <nav topics={ topics }
    topics의 값을 topic를 넣어 topics 배열을 받아주고 그 배열이 Nav component로 인해
    props.topics.length 만큼의 for문을 돌려주고 그 값을 lis에 집어넣는다. 

    -
    event
    onClick , etc {함수}를 통해서 event를 실행시킬 수 있다. React 이벤트에 숙달되면
    화살표 함수를 많이 적게 될 것 같다.

         <Header title="React" onChangeMode = {()=>{alert('header');}}></Header>
         <Nav topics={topics} onChangeMode = {(id)=>{alert(id);}}></Nav>
         
        for(let i = 0 ; i < props.topics.length;i++){ 
          let t = props.topics[i]; 
          lis.push(<li key={t.id}><a id={t.id} href={'/read/'+t.id} onClick={(e)=>{e.preventDefault(); props.onChangeMode(e.target.id);}}>t.title</a></li>);
        } < a 태그 클릭 시 해당 id를 값으로 하는 alert 출력

        <a href="/" onClick = {(e)=>{e.preventDefault(); props.onChangeMode();}}>{props.title}</a>
            해당 태그 클릭 시 header가 alert 메시지로 출력됨.

state
-
import를 통해 usestate를 선언해야 한다.
변경변수와 , 값 변수 두 개를 배열로 묶어서 선언해준다.
ex ) const [mode,setmode] = useState('WELCOME'); < userState 안에 넣어놓은 것은 default 값이다.
배열에 관해서는 애플코딩 리액트 강의에 적어놓음.


create
-
대부분에 애플리케이션에는 create read update delete 이 4가지 동작이 있음.

update
-
1에서의 props 값을 2에서 1 props를 받아서 받아서 수정할 수 없음.
왕의 어명인지 예를 들어주셨는데 이해가 잘 안되었음.

~

이후로는 새로운 개념에 대한 이야기는 없었음.








    

